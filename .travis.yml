language: android
jdk: oraclejdk8
sudo: required # false for Container-Based Infrastructure, required for Sudo-enabled Infrastructure

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

notifications:
  email: false

android:
  components: # Cookbooks version: https://github.com/travis-ci/travis-cookbooks/tree/9c6cd11
    - tools # Update preinstalled tools from revision 24.0.2 to 24.4.1
    - build-tools-26.0.1 # Match build-tools version used in build.gradle
    - platform-tools # Update platform-tools to revision 25.0.3+
    - tools # Update tools from revision 24.4.1 to 25.2.5

env:
  global:
    - API=26 
    - TAG=google_apis # Google APIs by default, alternatively use default
    - ABI=armeabi-v7a # ARM ABI v7a by default
    - AVD_ENGINE=classic
    - QEMU_AUDIO_DRV=none # Disable emulator audio to avoid warning
    - GRADLE_USER_HOME="${TRAVIS_BUILD_DIR}/gradle" # Change location for Gradle Wrapper and cache
    - ANDROID_HOME=/usr/local/android-sdk-25.2.3 # Depends on the cookbooks version used in the VM
    - TOOLS=${ANDROID_HOME}/tools # PATH order matters, exists more than one emulator script
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    - ADB_INSTALL_TIMEOUT=20 # minutes (2 minutes by default)

#matrix:
#  include: # More Emulator API levels to build in parallel
#    - env: API=24 ABI=arm64-v8a AVD_ENGINE=qemu2 TAG=default
#    - env: API=24 TAG=default
#    - env: API=22
#    - env: API=22 TAG=default
#    - env: API=21
#    - env: API=21 TAG=default
#  allow_failures:
#    - env: API=22
#  fast_finish: false

before_install:
  - openssl aes-256-cbc -K $encrypted_8db7f4cb3c56_key -iv $encrypted_8db7f4cb3c56_iv -in keys.xml.enc -out app/src/main/res/values/keys.xml -d #unsplash api
  - export EMULATOR="system-images;android-${API};${TAG};${ABI}" # Used to install/create emulator
  - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid warning

install:
  - sdkmanager --uninstall "extras;google;google_play_services"
  # Update sdk tools to latest version and install/update components
  - echo yes | sdkmanager "tools" > /dev/null # /dev/null is used to supress the log, otherwise travis reaches it's 4mb log size limit
  - echo yes | sdkmanager "platforms;android-26" > /dev/null # Latest platform required by SDK tools
  - echo yes | sdkmanager "platforms;android-${API}" > /dev/null # Android platform required by emulator
  - echo yes | sdkmanager "extras;android;m2repository" > /dev/null
  - echo yes | sdkmanager "extras;google;m2repository" > /dev/null
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2" > /dev/null
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2" > /dev/null
#  - echo yes | sdkmanager "$EMULATOR" > /dev/null # Install emulator system image
#  # Create and start emulator
#  - echo no | avdmanager create avd -n acib -k "$EMULATOR" -f --abi "$ABI" --tag "$TAG"
#  - emulator -avd acib -engine $AVD_ENGINE -no-window -camera-back none -camera-front none -selinux permissive -verbose -qemu -m 512 &
#  # Start adbd, wait for device connected and show android serial to avoid heavy tasks in parallel
#  - adb wait-for-device get-serialno
  # Show version and download Gradle Wrapper if it's not already cached
  - ./gradlew --version
  # Clean project and download missing dependencies and components
  - ./gradlew clean
  # Check components status
  - sdkmanager --list |  sed -n '/Installed packages/,/Available Packages/p'

#before_script:
#  # Wait for emulator fully-booted and disable animations
#  - android-wait-for-emulator
#  - adb shell settings put global window_animation_scale 0 &
#  - adb shell settings put global transition_animation_scale 0 &
#  - adb shell settings put global animator_duration_scale 0 &
#  - adb install test-butler-app-1.3.1.apk #install Test Butler app to emulator
#  - sleep 30
#  - adb shell input keyevent 82 &
#  - sleep 15
 
script:
  - ./gradlew jacocoTestReport -PdisablePreDex --stacktrace

after_script:
  # Show tests and lint results
#  - cat ${TRAVIS_BUILD_DIR}/*/build/outputs/androidTest-results/connected/*
  - cat ${TRAVIS_BUILD_DIR}/*/build/test-results/testDebugUnitTest/*.xml

after_success:
  - bash <(curl -s https://codecov.io/bash)